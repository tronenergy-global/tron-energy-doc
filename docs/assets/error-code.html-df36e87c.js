import{_ as e,o as a,c as s,a as n}from"./app-e3eef4aa.js";const t={},r=n(`<h1 id="api-return-value" tabindex="-1"><a class="header-anchor" href="#api-return-value" aria-hidden="true">#</a> API return value</h1><p>There are two status codes (http_status_code) returned by the current API: <code>200</code> and <code>400</code></p><h2 id="return-400" tabindex="-1"><a class="header-anchor" href="#return-400" aria-hidden="true">#</a> Return 400</h2><p>If the API returns 400, it indicates that the request parameters have not passed verification. There are two return formats at this time:</p><ol><li>There are specific parameter errors, mostly due to parameter verification failure.</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
     <span class="token property">&quot;energy_amount&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Please make sure the value is greater than or equal to 10000.&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
     <span class="token property">&quot;period&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&#39;1X&#39; is not a legal option.&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>The error reasons for each field will be listed. The reason list is an array. There may be multiple reasons!</li></ul></div><ol start="2"><li>There are no specific parameter errors. Most of them are that the parameter verification is successful, but other errors are caused.</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;API not found&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>The key is fixed to detail, and the return result is a string. If you want to display a specific error during development, you need to first determine whether it is a detil type error, and then determine whether the parameter is wrong.</li></ul></div><h2 id="return-200" tabindex="-1"><a class="header-anchor" href="#return-200" aria-hidden="true">#</a> Return 200</h2><p>When the API returns 200, the return format is fixed to</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
     <span class="token property">&quot;errno&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
     <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> &#39;XXXX&#39;<span class="token punctuation">,</span>
     <span class="token property">&quot;param1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;value1&quot;</span><span class="token punctuation">,</span>
     ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>errno is 1 or 0. When <code>errno=0</code>, it means that the request is normal. When <code>errno=1</code>, it means that the request encountered a problem. At this time, there will be a <code>message</code> parameter to indicate the reason.</li><li>In some requests, there will be other return parameters, please refer to the description in the API chapter for details.</li></ul>`,14),o=[r];function i(l,p){return a(),s("div",null,o)}const u=e(t,[["render",i],["__file","error-code.html.vue"]]);export{u as default};
